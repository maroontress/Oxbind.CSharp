//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maroontress.Oxbind.Impl {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Maroontress.Oxbind.Impl.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attribute name &apos;{0}&apos; is duplicated for [ForAttribute] attributes on constructor parameter(s): {1}..
        /// </summary>
        internal static string duplicated_attribute_name {
            get {
                return ResourceManager.GetString("duplicated_attribute_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor must not have two or more parameters attributed with [ForText]: {0}..
        /// </summary>
        internal static string duplicated_ForText {
            get {
                return ResourceManager.GetString("duplicated_ForText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string error {
            get {
                return ResourceManager.GetString("error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of a constructor parameter attributed with [ForChildElement] must be string, BindResult&lt;string&gt;, or an IEnumerable of these types: {0}..
        /// </summary>
        internal static string innermost_type_of_the_ForChildElement_parameter_must_be_string {
            get {
                return ResourceManager.GetString("innermost_type_of_the_ForChildElement_parameter_must_be_string", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A [Multiple] parameter for element &apos;{0}&apos; must not be followed by another parameter for the same element name: {1}..
        /// </summary>
        internal static string multiple_parameter_followed_by_the_one_that_has_the_same_element_name {
            get {
                return ResourceManager.GetString("multiple_parameter_followed_by_the_one_that_has_the_same_element_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class must be attributed with [ForElement]..
        /// </summary>
        internal static string must_be_annotated_with_ForElement {
            get {
                return ResourceManager.GetString("must_be_annotated_with_ForElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The class must have exactly one constructor that is not attributed with [Ignored]..
        /// </summary>
        internal static string must_have_one_valid_constructor {
            get {
                return ResourceManager.GetString("must_have_one_valid_constructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type attributed with [ForElement] must be a class, not an interface..
        /// </summary>
        internal static string must_not_be_interface {
            get {
                return ResourceManager.GetString("must_not_be_interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An [Optional] parameter for element &apos;{0}&apos; must not be followed by a [Required] or [Multiple] parameter for the same element name: {1}..
        /// </summary>
        internal static string optional_parameter_followed_by_the_one_that_has_the_same_element_name {
            get {
                return ResourceManager.GetString("optional_parameter_followed_by_the_one_that_has_the_same_element_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter must not be attributed with two or more of the following mutually exclusive attributes: [Required], [Optional], [Multiple]. Parameter: {0}..
        /// </summary>
        internal static string parameter_for_child_elements_must_be_mutually_exclusive {
            get {
                return ResourceManager.GetString("parameter_for_child_elements_must_be_mutually_exclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter for a child element or text must be attributed with [Required], [Optional], [Multiple], or [ForText]: {0}..
        /// </summary>
        internal static string parameter_must_be_annotated_with_attributes_for_child_elements {
            get {
                return ResourceManager.GetString("parameter_must_be_annotated_with_attributes_for_child_elements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter for a string child element must be annotated with [ForChildElement]: {0}..
        /// </summary>
        internal static string parameter_must_be_annotated_with_ForChildElement {
            get {
                return ResourceManager.GetString("parameter_must_be_annotated_with_ForChildElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter must not be attributed with both [ForAttribute] and another Oxbind binding attribute (e.g., [Required], [ForText]): {0}..
        /// </summary>
        internal static string parameter_must_not_be_annotated_with_both_ForAttribute_and_another {
            get {
                return ResourceManager.GetString("parameter_must_not_be_annotated_with_both_ForAttribute_and_another", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter must not be attributed with both [ForText] and another Oxbind binding attribute (e.g., [Required]): {0}..
        /// </summary>
        internal static string parameter_must_not_be_annotated_with_both_ForText_and_another {
            get {
                return ResourceManager.GetString("parameter_must_not_be_annotated_with_both_ForText_and_another", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of constructor parameter(s) {0} must be a class attributed with [ForElement]..
        /// </summary>
        internal static string parameter_type_must_be_annotated_with_ForElement {
            get {
                return ResourceManager.GetString("parameter_type_must_be_annotated_with_ForElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter attributed with [Multiple] must be of type IEnumerable&lt;T&gt; (or IEnumerable&lt;BindResult&lt;T&gt;&gt;): {0}..
        /// </summary>
        internal static string parameter_type_must_be_IEnumerableT {
            get {
                return ResourceManager.GetString("parameter_type_must_be_IEnumerableT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor parameter not attributed with [Multiple] (e.g., [Required], [Optional]) must not be of type IEnumerable&lt;T&gt;: {0}..
        /// </summary>
        internal static string parameter_type_must_not_be_IEnumerableT {
            get {
                return ResourceManager.GetString("parameter_type_must_not_be_IEnumerableT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A constructor must not mix parameters attributed with [ForText] ({0}) and parameters attributed with [Required], [Optional], or [Multiple] ({1})..
        /// </summary>
        internal static string parameters_must_not_be_mixed {
            get {
                return ResourceManager.GetString("parameters_must_not_be_mixed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constructor parameters attributed with [ForAttribute] must appear consecutively at the beginning of the parameter list. Misplaced parameter(s): {0}..
        /// </summary>
        internal static string parameters_with_ForAttribute_must_be_listed_consecutively_at_the_beginning {
            get {
                return ResourceManager.GetString("parameters_with_ForAttribute_must_be_listed_consecutively_at_the_beginning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of a constructor parameter attributed with [ForAttribute] must be string? or BindResult&lt;string&gt;?: {0}..
        /// </summary>
        internal static string type_mismatch_ForAttribute {
            get {
                return ResourceManager.GetString("type_mismatch_ForAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of a constructor parameter attributed with [ForText] must be string or BindResult&lt;string&gt;: {0}..
        /// </summary>
        internal static string type_mismatch_ForText {
            get {
                return ResourceManager.GetString("type_mismatch_ForText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string warning {
            get {
                return ResourceManager.GetString("warning", resourceCulture);
            }
        }
    }
}
